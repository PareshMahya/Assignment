1.	Create a list of given structure and get the Access list as provided below: x=[100,200,300,400,500,[1,2,3,4,5,[10,20,30,40,50],6,7,8,9],600,700,800]

x = [100,200,300,400,500,[1,2,3,4,5,[10,20,30,40,50],6,7,8,9],600,700,800]
# Access list: [1, 2, 3, 4]
print(x[5][:4])
# Access list: [600,  700]
print(x[-3:-1])
# Access list: [100, 300, 500, 600, 800]
print(x[::2])
# Access list: [[800, 700, 600, [1, 2, 3, 4, 5, [10, 20, 30, 40, 50], 6, 7, 8, 9], 500, 400, 300, 200, 100]]
print(x[::-1])
# a = x.reverse()
# print(a)
# Access list: [10]
print(x[5][5][0])
# Access list: [ ]
y = x.copy()
del y[0:len(y)+1]
print(y)

2.	Create a list of thousand numbers using range and xrange and see the difference between each other. 
(For reference:https://www.techbeamers.com/python-xrange-range/)

#____in python3 xrange is replaced by range function_____
x = range(1,1000)
#y = xrange(1,1000)
print(x)
#print(y)

3.	How Tuple is beneficial as compared to the list?
Tuples are data structures in Python,  tuples are immutable and have a fixed size. Operations on tuples can be executed faster compared to operations on lists.

4.	Write a program in Python to iterate through the list of numbers in the range of 1,100 and print the number which is divisible by 3 and is a multiple of 2.
x=[]
for i in range(1,100):
    if i%3==0 and i%2==0:
        x.append(i)
print (x)

5.	Write a program in Python to reverse a string and print only the vowel alphabet if it exists in the string with their index.

def reverse_vowel_alphabet(x):
    print(x)
    y = x[::-1]
    print(y)
    ans= ""
    for i in y:
        print(i)
        if i in "aeiouAEIOU":
            ans += i
    return ans    
print(reverse_vowel_alphabet("Hi, this is Paresh"))

6.	Write a program in Python to iterate through the string “hello my name is abcde” and print the string which is having an even length.

def evenLengthWord(x): 
    y = x.split(' ') 
    print(y)
    ans = ""
    for word in y:
        if len(word)%2==0:
            ans += " "+ word
        else:
            ans = ans
    return ans  
x = "hello my name is abcde paresh kumar " 
y = evenLengthWord(x)
print (y.lstrip())

7.	Write a program in python to print the pair of numbers whose sum is equal to the result number that is let's say 8. x=[1,2,3,4,5,6,7,8,9,-1]

def getPairSumNum(x, sum_num):
    n = len(x)
    temp = []
    for i in x:
        for j in x[(i-1):]:
            if x[i] + x[j] == sum_num:
                y = (x[i],x[j])
                temp.append(y)
            if i==(n-2) and j==(n-1):
                break
    print(temp)
    
x = [1,2,3,4,5,6,7,8,9,-1]
sum_num = 8
getPairSumNum(x, sum_num)

8.	Write a program in Python to complete the following task:
Create two lists such as even_list and odd_list
Ask user to enter a number in the range of 1,50 and make sure if the entered number is even, append it to the even_list and if the entered number is odd append it to the odd_list.
Keep that in mind you can only add 5 items in each list
Make sure once you enter all the  5 elements, calculate the sum of the list and return the maximum of the list.


even_list = []
odd_list = []
count=0
while count<5:
    count+=1
    uip=int(input("Enter a number in the range of 1,50 :"))
    
    if uip%2==0 and uip<=50:
        print("very good, It's valid number.")
        even_list.append(uip)
    elif uip%2!=0 and uip<=50:
        print("very good, It's valid number.")
        odd_list.append(uip)
    else:
        print("Sorry, It is not a valid number.")
        count-=1

print("even list:",even_list,",\tSum of the even list :",sum(even_list), ",\t and Max of the even lsit", max(even_list))
print("odd list",odd_list, ",\tSum of the odd list :", sum(odd_list), ",\t and Max of the odd lsit", max(odd_list))


9.	Write a program to find out the occurrence of a specific character  from an alphanumeric string.
Sample input: 12abcbacbaba344ab  
Expected output: a=5 b=5 c=2
NOTE: Make sure to avoid counting the occurrence of  numeric values  in the string.

usr_ip = "12abcbacbaba344ab"
ans={}
for i in usr_ip:
    count = 0
    if i.isalpha():
        if i in ans:
            ans[i]+=1
        else:
            ans[i]=1
    else:
        pass
for k, v in ans.items():
    print(k,"=",v)

10.	Generate and print another tuple whose values are even numbers in the given tuple(1,2,3,4,5,6,7,8,9,10).

usr_ip = (1,2,3,4,5,6,7,8,9,10)
usr_ip_list = list(usr_ip)
evn_num = []
for i in usr_ip_list:
    if i%2==0:
        evn_num.append(i)
    else:
        pass
ans= tuple(evn_num)
print(ans)
